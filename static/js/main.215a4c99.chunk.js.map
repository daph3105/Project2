{"version":3,"sources":["components/Advice.js","components/ThisThatAnswer.js","components/OutTonight.js","components/EatAnswer.js","components/NavDesktop.js","components/HomePage.js","components/Dropdown.js","components/YesNoQuestion.js","components/YesNoAnswer.js","components/DecideQuestion.js","App.js","serviceWorker.js","index.js"],"names":["advice","options","finalUrl","gifToShow","movieTitle","trailer","embededTrailer","finalTrailerLink","drink","drinkImage","mealToEat","recipe","mealPhoto","NavDesktop","state","isOpen","toggleCollapse","setState","color","dark","expand","style","backgroundColor","scrolling","fixed","className","this","props","homeMenu","to","onClick","id","navbar","left","activeLink1","activeLink","right","Component","HomePage","textDecoration","src","Dropdown","show","value","handleToggle","handleChange","type","hidden","map","question","link","questions","YesNoQuestion","e","target","focus","YesorNo","randomAnswer","axios","get","then","response","data","catch","error","console","log","textTransform","answer","image","Advice","randomAdvice","slip","urlPart1","urlPart2","thisThatAnswer","setOptions","name","mySubmitHandler","event","preventDefault","option1","option2","bubble","random","Math","floor","guruOption","concat","fetch","cache","json","randomGif","optionToShow","images","original","url","onSubmit","placeholder","onChange","decideQuestion","randomNumber","decideAnswer","loadTrailerorNot","randomMovie","replace","allowFullScreen","href","synopsis","randomDrink","err","title","drinks","strDrink","strDrinkThumb","EatAnswer","randomMeal","meals","strMeal","strSource","strMealThumb","App","exact","path","component","render","YesNoAnswer","ThisThatAnswer","DecideQuestion","OutTonight","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yKAKIA,ECCAC,EAGAC,EACAC,ECJAC,EACAC,EACAC,EACAC,EACAC,EACAC,ECNAC,EACAC,EACAC,E,oGC8DWC,EA/Df,2MACIC,MAAQ,CACJC,QAAQ,GAFhB,EAKMC,eAAiB,WACf,EAAKC,SAAS,CAAEF,QAAS,EAAKD,MAAMC,UAN5C,wEAUQ,OAEI,kBAAC,IAAD,CAAWG,MAAM,SAASC,MAAI,EAACC,OAAO,KAAKC,MAAO,CAACC,gBAAgB,WAAYC,WAAS,EAACC,MAAM,MAC/FC,UAAYC,KAAKC,MAAMC,UACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,GAAG,IAAIR,MAAO,CAACH,MAAM,UAAU,4BAAQO,UAAU,cAAlB,oBAE7C,kBAAC,IAAD,CAAkBK,QAASJ,KAAKV,iBAChC,kBAAC,IAAD,CAAce,GAAG,kBAAkBhB,OAAQW,KAAKZ,MAAMC,OAAQiB,QAAM,GAClE,kBAAC,IAAD,CAAcC,MAAI,GAChB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYJ,GAAG,UAAUJ,UAAYC,KAAKC,MAAMO,aAAhD,uBAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYL,GAAG,cAAf,2BAEF,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYA,GAAG,UAAUJ,UAAYC,KAAKC,MAAMQ,YAAhD,uCAEA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYN,GAAG,WAAf,kCAgBF,kBAAC,IAAD,CAAcO,OAAK,GACjB,kBAAC,IAAD,aA/ClB,GAAgCC,aC2BjBC,EA5Bf,iLAIQ,OACI,oCACA,kBAAC,EAAD,CAAYV,SAAU,aAGtB,wBAAIH,UAAU,WAAd,kDACA,wBAAIA,UAAU,WAAd,iBAIA,yBAAKA,UAAU,QACf,6BAASA,UAAU,gBACnB,kBAAC,IAAD,CAAMI,GAAG,UAAUR,MAAO,CAACkB,eAAe,OAAQrB,MAAM,UAAU,4BAAQO,UAAU,kBAAlB,wBAClE,kBAAC,IAAD,CAAMI,GAAG,aAAaR,MAAO,CAACkB,eAAe,OAAQrB,MAAM,UAAU,4BAAQO,UAAU,kBAAlB,4BACrE,kBAAC,IAAD,CAAMI,GAAG,UAAUR,MAAO,CAACkB,eAAe,OAAQrB,MAAM,UAAU,4BAAQO,UAAU,kBAAlB,wCAClE,kBAAC,IAAD,CAAMI,GAAG,UAAUR,MAAO,CAACkB,eAAe,OAAQrB,MAAM,UAAU,4BAAQO,UAAU,kBAAlB,iCAE9D,yBAAKA,UAAU,gBAAgBe,IAAI,6BArBnD,GAA8BH,aC+BfI,EA5Bf,iLACc,IAAD,EAMCf,KAAKC,MAJPe,EAFC,EAEDA,KACAC,EAHC,EAGDA,MACAC,EAJC,EAIDA,aACAC,EALC,EAKDA,aAGZ,OAEQ,yBAAKpB,UAAU,sBACf,2BAAOA,UAAU,SACjB,2BAAOqB,KAAK,SAASH,MAAOA,EAAOlB,UAAU,eAAeK,QAASc,KACrE,wBAAInB,UAAU,gBAAgBsB,QAASL,GACtChB,KAAKC,MAAM1B,QAAQ+C,KAAI,SAACC,GAAD,OACpB,wBAAIxB,UAAU,SAASK,QAASe,EAAaI,EAASA,WACtD,kBAAC,IAAD,CAAMpB,GAAIoB,EAASC,KAAM7B,MAAO,CAACkB,eAAe,SAC7CU,EAASA,oBAlBxB,GAA8BZ,aCHxBc,EAAW,CACf,CAACF,SAAS,8BAA+BC,KAAK,YAC9C,CAACD,SAAS,mBAAoBC,KAAK,YACnC,CAACD,SAAS,kBAAmBC,KAAK,YAClC,CAACD,SAAU,mBAAoBC,KAAK,YACpC,CAACD,SAAU,mBAAoBC,KAAK,YACpC,CAACD,SAAU,mBAAoBC,KAAK,YACpC,CAACD,SAAU,mBAAoBC,KAAK,YACpC,CAACD,SAAU,mBAAoBC,KAAK,aAiCvBE,EA/Bf,YACI,WAAazB,GAAQ,IAAD,8BAChB,4CAAMA,KAMRiB,aAAe,SAACS,GACdA,EAAEC,OAAOC,QACT,EAAKtC,SAAS,CAAEyB,MAAO,EAAK5B,MAAM4B,QATlB,EAYpBG,aAAe,SAACI,GAAD,OAAc,WACzB,EAAKhC,SAAS,CAAE0B,MAAOM,EAAUP,MAAM,MAXvC,EAAK5B,MAAQ,CACX4B,MAAM,GAHQ,EADxB,sEAiBQ,OACI,oCACC,kBAAC,EAAD,MACD,6BAASjB,UAAU,oBACnB,yBAAKA,UAAU,oBAAoBe,IAAI,uBACvC,0BAAMf,UAAU,aAAhB,SACA,kBAAC,EAAD,CAAUiB,KAAMhB,KAAKZ,MAAM4B,KAAMC,MAAOjB,KAAKZ,MAAM6B,MAAOC,aAAclB,KAAKkB,aAC7EC,aAAcnB,KAAKmB,aAAc5C,QAASkD,UAxBtD,GAAmCd,a,iBCwBpBmB,EAlCf,YAEI,WAAY7B,GAAO,IAAD,8BACd,4CAAMA,KACDb,MAAQ,CACb2C,aAAa,IAHC,EAFtB,iFASyB,IAAD,OAChBC,IAAMC,IAAN,0BACCC,MAAK,SAAAC,GACJ,EAAK5C,SAAS,CAAEwC,aAAaI,EAASC,UAEvCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAftB,+BAmBQ,OACI,oCACA,kBAAC,EAAD,CAAY9B,YAAa,6BACzB,yBAAKT,UAAU,sBACf,wBAAIM,GAAG,cAAcV,MAAO,CAAE8C,cAAe,eAAgBzC,KAAKZ,MAAM2C,aAAaW,OAArF,OACA,yBAAKrC,GAAG,eAAeS,IAAKd,KAAKZ,MAAM2C,aAAaY,QACpD,yBAAK5C,UAAU,eAAee,IAAI,0BAGlC,yBAAKf,UAAU,YAAYe,IAAI,4BA5B3C,GAA6BH,aR8CdiC,EA5Cf,YAEI,WAAY3C,GAAO,IAAD,8BACd,4CAAMA,KACDb,MAAQ,CACbyD,aAAa,IAHC,EAFtB,iFASyB,IAAD,OAChBb,IAAMC,IAAN,qCACCC,MAAK,SAAAC,GACJ,EAAK5C,SAAS,CAAEsD,aAAaV,EAASC,UAEvCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAftB,+BA8BQ,OANFtC,KAAKZ,MAAMyD,aAAaC,OAC1BxE,EAAS0B,KAAKZ,MAAMyD,aAAaC,KAAKxE,QAM9B,oCACG,kBAAC,EAAD,MACC,yBAAKyB,UAAU,sBACf,uBAAGM,GAAG,UAAU/B,GAChB,yBAAKyB,UAAU,eAAee,IAAI,0BAElC,yBAAKf,UAAU,YAAYe,IAAI,4BArC/C,GAA4BH,a,QCAxBoC,EAAW,mFACXC,EAAU,qCA6FCC,EAzFf,YACI,WAAYhD,GAAO,IAAD,8BACd,4CAAMA,KAUNiD,WAAa,SAACvB,GACV,EAAKpC,SAAL,eACKoC,EAAEC,OAAOuB,KAAOxB,EAAEC,OAAOX,QACvB,gBAdG,EAkBdmC,gBAAkB,SAACC,GAEf,GADAA,EAAMC,iBACF,EAAKlE,MAAMmE,SAAW,EAAKnE,MAAMoE,QAAQ,CACzC,EAAKjE,SAAS,CACVkE,QAAO,IAEflF,EAAU,CAAC,EAAKa,MAAMmE,QAAS,EAAKnE,MAAMoE,SAC1C,IAAIE,EAASC,KAAKC,MAAsB,EAAhBD,KAAKD,UAC7B,EAAKnE,SAAS,CAACsE,WAAWtF,EAAQmF,KAClClF,EAAWuE,EAASe,OAAOvF,EAAQmF,GAAQV,GAC3CT,QAAQC,IAAIhE,GAEZuF,MAAMvF,EAAU,CAACwF,MAAO,aACvB9B,MAAK,SAAAC,GAAQ,OAAEA,EAAS8B,UACxB/B,MAAK,SAAAE,GACFG,QAAQC,IAAIJ,EAAKA,MACjB,EAAK7C,SAAS,CACV2E,UAAW9B,GAEfG,QAAQC,IAAI,EAAKpD,MAAM8E,iBAnC/B,EAAK9E,MAAQ,CACbmE,QAAQ,GACRC,QAAQ,GACRK,WAAW,GACXK,UAAU,GACVT,QAAO,GAPO,EADtB,sEA8CQ,IAAIU,EAAe,GAenB,OAbEA,EADEnE,KAAKZ,MAAMyE,WACE,uBAAGxD,GAAG,WAAWV,MAAO,CAAC8C,cAAe,eAAxC,IAAyDzC,KAAKZ,MAAMyE,WAApE,yBAEA,GAKbpF,EAFAuB,KAAKZ,MAAM8E,UAAU9B,KAET,yBAAK/B,GAAG,MAAMS,IAAKd,KAAKZ,MAAM8E,UAAU9B,KAAK,GAAGgC,OAAOC,SAASC,MAG9D,GAId,oCACA,kBAAC,EAAD,MAEA,yBAAKjE,GAAG,eAAeS,IAAI,uBAC3B,yBAAKf,UAAU,mBACf,wBAAIA,UAAU,kBAAd,0BACA,uBAAGM,GAAG,uBAAsB,2FAC5B,0BAAMkE,SAAUvE,KAAKoD,iBACrB,yBAAKrD,UAAU,4BACf,2BAAOqB,KAAK,OAAO+B,KAAK,UAAUqB,YAAY,WAAWvD,MAAOjB,KAAKZ,MAAMmE,QAASkB,SAAUzE,KAAKkD,aACnG,oCACA,2BAAO9B,KAAK,OAAO+B,KAAK,UAAUqB,YAAY,WAAWvD,MAAOjB,KAAKZ,MAAMoE,QAASiB,SAAUzE,KAAKkD,cAEnG,4BAAQnD,UAAU,iBAAiBqB,KAAK,UAAxC,eAEA,yBAAKrB,UAAU,iBACdoE,EACA1F,EACAuB,KAAKZ,MAAMqE,OAAS,yBAAK1D,UAAU,SAASe,IAAI,yBAA0B,YAhFvF,GAAoCH,aQP9Bc,EAAW,CACf,CAACF,SAAS,2BAA4BC,KAAK,YAC3C,CAACD,SAAS,iCAAkCC,KAAK,QACjD,CAACD,SAAS,kBAAmBC,KAAK,YAClC,CAACD,SAAU,mBAAoBC,KAAK,aAkCvBkD,EAhCf,YACI,WAAazE,GAAQ,IAAD,8BAChB,4CAAMA,KAMRiB,aAAe,SAACS,GACdA,EAAEC,OAAOC,QACT,EAAKtC,SAAS,CAAEyB,MAAO,EAAK5B,MAAM4B,QATlB,EAYpBG,aAAe,SAACI,GAAD,OAAc,WACzB,EAAKhC,SAAS,CAAE0B,MAAOM,EAAUP,MAAM,MAXvC,EAAK5B,MAAQ,CACX4B,MAAM,GAHQ,EADxB,sEAmBQ,OACI,oCACA,kBAAC,EAAD,MACA,6BAASjB,UAAU,oBACnB,yBAAKA,UAAU,oBAAoBe,IAAI,uBACvC,0BAAMf,UAAU,aAAhB,SACA,kBAAC,EAAD,CAAUiB,KAAMhB,KAAKZ,MAAM4B,KAAMC,MAAOjB,KAAKZ,MAAM6B,MAAOC,aAAclB,KAAKkB,aAC7EC,aAAcnB,KAAKmB,aAAc5C,QAASkD,UA1BtD,GAAoCd,aPChCgE,EAAehB,KAAKC,MAAM,EAAAD,KAAKD,UAA0B,EA4F9CkB,EA1Ff,YAEI,WAAY3E,GAAO,IAAD,8BACd,4CAAMA,KA8BV4E,iBAAmB,WACjB,OAAmC,MAAhC,EAAKzF,MAAM0F,YAAYnG,SACzBA,EAAU,EAAKS,MAAM0F,YAAYnG,QACjCC,EAAiBD,EAAQoG,QAAQ,WAAY,UAC7ClG,EAAmBD,EAAemG,QAAQ,QAAS,UAC1C,oCACD,4BAAQjE,IAAKjC,EAAkBmG,iBAAe,GAA9C,KACA,uBAAGC,KAAMpG,EAAkBwB,GAAG,eAAeuB,OAAO,UAApD,qBAEA,wBAAIvB,GAAG,YAAP,aAA8B,EAAKjB,MAAM0F,YAAYI,WAtC5D,EAAK9F,MAAQ,CACb0F,YAAY,GACZK,YAAY,IAJE,EAFtB,iFAWuB,IAAD,OACZpB,MAAM,+CAAgD,CAACC,MAAO,aAC7D9B,MAAK,SAAAC,GAAQ,OAAEA,EAAS8B,UACxB/B,MAAK,SAAAE,GAAI,OAAG,EAAK7C,SAAS,CAACuF,YAAY1C,OAGvCC,OAAM,SAAA+C,GACL7C,QAAQC,IAAI4C,MAEdpD,IAAMC,IAAI,0DACTC,MAAK,SAAAC,GACJ,EAAK5C,SAAS,CAAE4F,YAAYhD,EAASC,UAGtCC,OAAM,SAAA+C,GACL7C,QAAQC,IAAI4C,QA1BxB,+BAgDM,OADA7C,QAAQC,IAAImC,GACK,GAAdA,EACC3E,KAAKZ,MAAM0F,aACVpG,EAAasB,KAAKZ,MAAM0F,YAAYO,MAEnC,oCACD,kBAAC,EAAD,CAAY5E,WAAY,6BACvB,yBAAKV,UAAU,sBACf,uBAAGM,GAAG,kBAAN,UAA+B,6BAA/B,wBAEA,wBAAIA,GAAG,eAAe3B,GACtB,yBAAKqB,UAAU,eAAee,IAAI,yBACjCd,KAAK6E,oBAEN,yBAAK9E,UAAU,YAAYe,IAAI,yBAGvB,2CAIbd,KAAKZ,MAAM+F,YAAYG,QACxBxG,EAAQkB,KAAKZ,MAAM+F,YAAYG,OAAO,GAAGC,SACzCxG,EAAaiB,KAAKZ,MAAM+F,YAAYG,OAAO,GAAGE,cAE5C,oCACA,kBAAC,EAAD,CAAY/E,WAAY,6BACxB,yBAAKV,UAAU,sBACf,uBAAGM,GAAG,eAAN,iCAAmD,6BAAnD,mDAEA,wBAAIA,GAAG,cAAcvB,GACrB,yBAAKiB,UAAU,eAAee,IAAI,yBAClC,yBAAKT,GAAG,cAAcS,IAAK/B,KAE3B,yBAAKgB,UAAU,YAAYe,IAAI,yBAGvB,+CApFhB,GAAkCH,aCqCnB8E,EA1Cf,YACI,WAAYxF,GAAO,IAAD,8BACd,4CAAMA,KACDb,MAAQ,CACbsG,WAAW,IAHG,EADtB,iFAQyB,IAAD,OAChB1D,IAAMC,IAAN,sDACCC,MAAK,SAAAC,GACJ,EAAK5C,SAAS,CAAEmG,WAAWvD,EAASC,OACpCG,QAAQC,IAAI,EAAKpD,MAAMsG,eAExBrD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAftB,+BAwBQ,OALItC,KAAKZ,MAAMsG,WAAWC,QAC1B3G,EAAYgB,KAAKZ,MAAMsG,WAAWC,MAAM,GAAGC,QAC3C3G,EAASe,KAAKZ,MAAMsG,WAAWC,MAAM,GAAGE,UACxC3G,EAAYc,KAAKZ,MAAMsG,WAAWC,MAAM,GAAGG,cAGvC,oCACA,kBAAC,EAAD,CAAYrF,WAAY,6BACxB,yBAAKV,UAAU,sBACf,wBAAIM,GAAG,cAAP,aAAgCrB,GAChC,yBAAKqB,GAAG,aAAcS,IAAK5B,IAC3B,uBAAGmB,GAAG,cAAN,mCAAoD,uBAAG4E,KAAMhG,EAAQ2C,OAAO,UAAxB,UAApD,KACA,uBAAGvB,GAAG,cAAN,mCACA,yBAAKN,UAAU,eAAee,IAAI,0BAElC,yBAAKf,UAAU,YAAYe,IAAI,4BAlC3C,GAA+BH,aO6BhBoF,EAzBf,iLAII,OACC,oCAEL,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtF,IACjC,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAM,kBAAC,EAAD,SAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWE,OAAQ,kBAAM,kBAACC,EAAD,SAC3C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,aAAaE,OAAQ,kBAAM,kBAACE,EAAD,SAC7C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAM,kBAACG,EAAD,SAC1C,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,WAAWE,OAAQ,kBAAM,kBAACI,EAAD,SAC3C,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,OAAOE,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAM,kBAAC,EAAD,eAhB1C,GAAyBxF,aCDL6F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNrE,QAAQC,IAAI,MACZqE,IAASV,OACT,kBAAC,IAAD,KACI,kBAAC,EAAD,OAGJW,SAASC,eAAe,SDoHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhF,MAAK,SAAAiF,GACjCA,EAAaC,kB","file":"static/js/main.215a4c99.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport NavDesktop from './NavDesktop'\n\n\nlet advice;\n\nexport class Advice extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAdvice:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://api.adviceslip.com/advice`)\n        .then(response => {\n          this.setState({ randomAdvice:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }    \n      \n \n    \n    \n    render() {\n\n   if(this.state.randomAdvice.slip){\n    advice = this.state.randomAdvice.slip.advice;\n   }\n    \n    \n   \n        return (\n            <>\n               <NavDesktop/>\n                <div className=\"response-container\">\n                <p id=\"advice\">{advice}</p>\n                <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n                </div>\n                <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            </>\n        )\n    }\n}\n\n\nexport default Advice\n","import React, { Component } from 'react'\nimport NavDesktop from './NavDesktop'\n\n\n\n\nlet options;\nlet urlPart1 = \"https://api.giphy.com/v1/gifs/search?api_key=sa9xw4Yo24USK2G5qleY0Y4HdBWjcDf2&q=\"\nlet urlPart2= \"&limit=1&offset=0&rating=G&lang=en\"\nlet finalUrl\nlet gifToShow\n\nexport class thisThatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        option1:'',\n        option2:'',\n        guruOption:'',\n        randomGif:{},\n        bubble:false\n            }  \n        }\n\n        setOptions = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n                }, ()=>{\n                })\n        }\n\n        mySubmitHandler = (event) => {\n            event.preventDefault();\n            if (this.state.option1 && this.state.option2){\n                this.setState({\n                    bubble:true\n                })   \n            options = [this.state.option1, this.state.option2];\n            let random = Math.floor(Math.random() * 2);\n            this.setState({guruOption:options[random]})\n            finalUrl = urlPart1.concat(options[random],urlPart2)\n            console.log(finalUrl)\n            \n            fetch(finalUrl, {cache: \"no-store\"})\n            .then(response=>response.json())\n            .then(data=> {\n                console.log(data.data)\n                this.setState({\n                    randomGif: data\n                },\n                console.log(this.state.randomGif)\n                )})   \n            } \n          }\n\n          \n\n    render() {\n        let optionToShow = '';\n        if (this.state.guruOption) {\n          optionToShow = <p id=\"gif-text\" style={{textTransform: 'capitalize'}}> {this.state.guruOption} is the best option! </p>;\n        } else {\n          optionToShow = '';\n        }\n        \n        if (this.state.randomGif.data){\n           \n            gifToShow = <img id=\"gif\" src={this.state.randomGif.data[0].images.original.url}/> ;\n            }\n            else{\n                gifToShow='';\n            }\n\n        return (\n            <>\n            <NavDesktop/>\n            \n            <img id=\"answer-image\" src=\"./images/guru2.png\"/>\n            <div className=\"thisthat-answer\">\n            <h4 className=\"guru-pick-text\">Guru, pick one for me:</h4>\n            <p id=\"guru-pick-paragraph\"><i>Enter below two things, and the Guru will pick one for you:</i></p>\n            <form onSubmit={this.mySubmitHandler}>\n            <div className=\"thisthat-input-container\">\n            <input type=\"text\" name=\"option1\" placeholder=\"Option 1\" value={this.state.option1} onChange={this.setOptions}/>\n            <span>OR</span>\n            <input type=\"text\" name=\"option2\" placeholder=\"Option 2\" value={this.state.option2} onChange={this.setOptions}/>\n            </div>\n            <button className=\"btn btn-danger\" type=\"submit\"> Pick Now </button>\n            </form>\n            <div className=\"gif-container\">    \n            {optionToShow}\n            {gifToShow}\n            {this.state.bubble ? <img className=\"speech\" src=\"./images/speech1.png\"/>: null}\n            \n            </div>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default thisThatAnswer\n\n\n\n  \n \n  \n","import React, { Component } from 'react'\nimport NavDesktop from './NavDesktop'\n\nimport axios from 'axios';\n\n\nlet movieTitle;\nlet trailer;\nlet embededTrailer;\nlet finalTrailerLink;\nlet drink;\nlet drinkImage;\nlet randomNumber = Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n\nexport class decideAnswer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMovie:{},\n        randomDrink:{}\n            }  \n        }\n\n\n  componentDidMount() {\n          fetch('https://tv-v2.api-fetch.website/random/movie', {cache: \"no-store\"})\n          .then(response=>response.json())\n          .then(data=> this.setState({randomMovie:data})\n\n          )\n          .catch(err =>{\n            console.log(err)\n          })\n          axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n          .then(response => {\n            this.setState({ randomDrink:response.data });\n\n          })\n          .catch(err =>{\n            console.log(err)\n          })\n            \n      }     \n     \n\n\n    loadTrailerorNot = () =>{\n      if(this.state.randomMovie.trailer!=null){\n       trailer = this.state.randomMovie.trailer;          \n       embededTrailer = trailer.replace(\"watch?v=\", \"embed/\");\n       finalTrailerLink = embededTrailer.replace(\"http:\", \"https:\")\n        return (<>\n               <iframe src={finalTrailerLink} allowFullScreen> </iframe> \n               <a href={finalTrailerLink} id=\"trailer-link\" target=\"_blank\">Link to Trailer</a></>)\n                }\n        return <h3 id=\"synopsis\" >Synopsis: {this.state.randomMovie.synopsis}</h3>\n           }\n\n    \n    render() {\n      console.log(randomNumber)\n      if(randomNumber==1){\n      if (this.state.randomMovie){\n           movieTitle = this.state.randomMovie.title;\n        return (\n            <>\n           <NavDesktop activeLink={\"nav-item nav-link active\"}/>\n            <div className=\"response-container\">\n            <p id=\"stay-home-text\" >Nope...<br/>\n              stay home and watch:</p>\n            <h3 id=\"movie-title\">{movieTitle}</h3>      \n            <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n            {this.loadTrailerorNot()}\n            </div> \n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            </>\n        )}\n        else return(<div>Loading...</div>)\n    }\n  else{\n    \n    if(this.state.randomDrink.drinks){\n      drink = this.state.randomDrink.drinks[0].strDrink\n      drinkImage = this.state.randomDrink.drinks[0].strDrinkThumb\n      return (\n        <>\n        <NavDesktop activeLink={\"nav-item nav-link active\"}/>\n        <div className=\"response-container\">\n        <p id=\"go-out-text\" >Yes, go out and have some fun!<br/>\n        buy yourself a drink, I feel like you need a...</p>\n        <h3 id=\"drink-text\">{drink}</h3>    \n        <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n        <img id=\"drink-image\" src={drinkImage}/>         \n        </div> \n        <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n        </>\n    )}\n    else return(<div>Loading...</div>)\n    }\n\n  }\n}\n\nexport default decideAnswer\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport NavDesktop from './NavDesktop'\n\n\nlet mealToEat;\nlet recipe;\nlet mealPhoto;\n\nexport class EatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMeal:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/random.php`)\n        .then(response => {\n          this.setState({ randomMeal:response.data });\n          console.log(this.state.randomMeal)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        if (this.state.randomMeal.meals){\n        mealToEat = this.state.randomMeal.meals[0].strMeal;\n        recipe = this.state.randomMeal.meals[0].strSource;\n        mealPhoto = this.state.randomMeal.meals[0].strMealThumb;\n        }\n        return (\n            <>\n            <NavDesktop activeLink={\"nav-item nav-link active\"}/>\n            <div className=\"response-container\">\n            <h4 id=\"food-title\" >Have some {mealToEat}</h4>\n            <img id=\"food-image\"  src={mealPhoto}/>\n            <p id=\"food-text1\" >I even found the recipe for you <a href={recipe} target=\"_blank\"> here.</a> </p>\n            <p id=\"food-text2\" >Now, don't be lazy and go cook.</p>\n            <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n            </div>\n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n               \n            </>\n        )}\n\n    \n}\n\nexport default EatAnswer\n","import React, { Component } from 'react'\nimport {\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n    } from \"mdbreact\";\n\nexport class NavDesktop extends Component {\n    state = {\n        isOpen: false\n      };\n      \n      toggleCollapse = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n      }\n      \n      render() {\n        return (\n         \n            <MDBNavbar color=\"indigo\" dark expand=\"md\" style={{backgroundColor:\"#D43A39\"}} scrolling fixed=\"top\"\n            className= {this.props.homeMenu}>\n              <MDBNavbarBrand> \n                <MDBNavLink to=\"/\" style={{color:\"white\"}}><strong className=\"white-text\">Guru Assistant</strong></MDBNavLink>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.toggleCollapse} />\n              <MDBCollapse  id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                <MDBNavbarNav left>\n                  <MDBNavItem >\n                  <MDBNavLink to=\"/yes-no\" className= {this.props.activeLink1}>Yes / No Questions</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/this-that\">This or That Questions</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                  <MDBNavLink to=\"/decide\" className= {this.props.activeLink}>Let the Guru decide things for you</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                  <MDBNavLink to=\"/advice\" > Ask the Guru for an Advice </MDBNavLink>\n                  </MDBNavItem>\n                  {/* <MDBNavItem>\n                    <MDBDropdown>\n                      <MDBDropdownToggle nav caret>\n                        <span className=\"mr-2\">Dropdown</span>\n                      </MDBDropdownToggle>\n                      <MDBDropdownMenu>\n                        <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                        <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\n                        <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                        <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n                  </MDBNavItem> */}\n                </MDBNavbarNav>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    {/* <MDBFormInline waves>\n                      <div className=\"md-form my-0\">\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                      </div>\n                    </MDBFormInline> */}\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n         \n          );\n        }\n      }\n\n\nexport default NavDesktop\n\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport NavDesktop from './NavDesktop';\n\n\nexport class HomePage extends Component {\n    \n\n    render() {\n        return (\n            <>  \n            <NavDesktop homeMenu={\"home-nav\"}/>\n        \n\n            <h1 className=\"home-h1\">Are you tired of making decisions on your own?</h1>\n            <h2 className=\"home-h2\">Ask the Guru!</h2>\n         \n            \n\n            <div className=\"home\">\n            <section className=\"home-buttons\">\n            <Link to=\"/yes-no\" style={{textDecoration:\"none\", color:\"white\"}}><button className=\"btn btn-danger\"> Yes / No Questions</button></Link>\n            <Link to=\"/this-that\" style={{textDecoration:\"none\", color:\"white\"}}><button className=\"btn btn-danger\"> This or That Questions</button></Link>\n            <Link to=\"/decide\" style={{textDecoration:\"none\", color:\"white\"}}><button className=\"btn btn-danger\"> Let the Guru decide things for you</button></Link>\n            <Link to=\"/advice\" style={{textDecoration:\"none\", color:\"white\"}}><button className=\"btn btn-danger\"> Ask the Guru for an Advice</button></Link>\n            </section> \n                <img className=\"guru-img-home\" src=\"./images/guru1.png\"/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default HomePage\n\n\n ","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\n\n\n\n\n\nexport class Dropdown extends Component {\n    render() {\n        const {\n            show,\n            value,\n            handleToggle,\n            handleChange,\n          } = this.props;\n\nreturn (\n\n        <div className=\"dropdown-container\">\n        <label className=\"arrow\">\n        <input type=\"button\" value={value} className=\"dropdown-btn\" onClick={handleToggle}/></label>\n        <ul className=\"dropdown-list\" hidden={!show}>\n        {this.props.options.map((question) => (\n            <li className=\"option\" onClick={handleChange(question.question)}>\n            <Link to={question.link} style={{textDecoration:\"none\"}}>\n              {question.question}\n              </Link></li>\n        ))}\n        </ul>\n            </div>\n             )\n              }\n                }\n \n\nexport default Dropdown\n\n\n\n","import React, { Component } from 'react'\nimport Dropdown from \"./Dropdown\"\nimport NavDesktop from './NavDesktop'\n\n\nconst questions =[\n  {question:\"Will I ever find true love?\", link:\"/answer1\"},\n  {question:\"Second question?\", link:\"/answer1\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"}]\n\nexport class YesNoQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }\n    render() {\n        return (\n            <>\n             <NavDesktop/>\n            <section className=\"question-section\">\n            <img className=\"guru-img-question\" src=\"./images/guru1.png\"/>\n            <span className=\"guru-word\">Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/>\n            </section>   \n            </>\n        )\n    }\n}\n\nexport default YesNoQuestion","import React, { Component } from 'react'\nimport axios from 'axios';\nimport NavDesktop from './NavDesktop'\n\n\nexport class YesorNo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAnswer:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://yesno.wtf/api/`)\n        .then(response => {\n          this.setState({ randomAnswer:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        return (\n            <>\n            <NavDesktop activeLink1={\"nav-item nav-link active\"}/>\n            <div className=\"response-container\">    \n            <h1 id=\"yes-no-text\" style={{ textTransform: 'capitalize'}}>{this.state.randomAnswer.answer}...</h1>\n            <img id=\"yes-no-image\" src={this.state.randomAnswer.image} />\n            <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n            \n            </div> \n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            </>\n        )\n    }\n}\n\nexport default YesorNo\n","import React, { Component } from 'react'\nimport Dropdown from './Dropdown'\nimport NavDesktop from './NavDesktop'\n\n\nconst questions =[\n  {question:\"Should I go out tonight?\", link:\"/answer3\"},\n  {question:\"I'm hungry, what should I eat?\", link:\"/eat\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer3\"}]\n\nexport class decideQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }    \n    \n    \n    render() {\n        return (\n            <>\n            <NavDesktop/>\n            <section className=\"question-section\">\n            <img className=\"guru-img-question\" src=\"./images/guru1.png\"/>\n            <span className=\"guru-word\">Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default decideQuestion\n","import React, { Component } from 'react'\nimport './App.css';\nimport {Switch, Link, Route} from 'react-router-dom';\nimport HomePage from './components/HomePage.js'\nimport YesNoQuestion from './components/YesNoQuestion';\nimport YesNoAnswer from './components/YesNoAnswer';\nimport Advice from './components/Advice';\nimport ThisThatAnswer from './components/ThisThatAnswer';\nimport DecideQuestion from './components/DecideQuestion';\nimport OutTonight from './components/OutTonight';\nimport EatAnswer from './components/EatAnswer';\n\n\nexport class App extends Component {\n\n  render() {\n   \n    return (\n     <>\n     \n<Switch>\n\n<Route exact path=\"/\" component={HomePage} />\n<Route exact path=\"/yes-no\" render={() => <YesNoQuestion/>} />\n<Route exact path=\"/answer1\" render={() => <YesNoAnswer/>} />\n<Route exact path=\"/this-that\" render={() => <ThisThatAnswer/>} />\n<Route exact path=\"/decide\" render={() => <DecideQuestion/>} />\n<Route exact path=\"/answer3\" render={() => <OutTonight/>} />\n<Route exact path=\"/eat\" render={() => <EatAnswer/>} />\n<Route exact path=\"/advice\" render={() => <Advice/>} />\n\n</Switch>\n\n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('hi')\nReactDOM.render(\n<HashRouter>\n    <App /> \n</HashRouter>,\n\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}