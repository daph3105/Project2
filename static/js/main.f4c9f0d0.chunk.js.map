{"version":3,"sources":["components/Advice.js","components/ThisThatAnswer.js","components/OutTonight.js","components/EatAnswer.js","components/HomePage.js","components/Dropdown.js","components/YesNoQuestion.js","components/GuruAnswerDesign.js","components/YesNoAnswer.js","components/ThisThatQuestion.js","components/DecideQuestion.js","App.js","serviceWorker.js","index.js"],"names":["advice","options","finalUrl","gifToShow","movieTitle","trailer","embededTrailer","drink","drinkImage","mealToEat","recipe","mealPhoto","HomePage","className","to","style","textDecoration","color","src","Component","Dropdown","this","props","show","value","handleToggle","handleChange","type","onClick","hidden","map","question","link","questions","YesNoQuestion","e","target","focus","setState","state","GuruAnswerDesign","YesorNo","randomAnswer","axios","get","then","response","data","catch","error","console","log","textTransform","answer","image","maxWidth","borderRadius","Advice","randomAdvice","slip","marginTop","marginLeft","thisThatQuestion","setOptions","option1","option2","submitOptions","preventDefault","name","placeholder","onChange","urlPart1","urlPart2","thisThatAnswer","mySubmitHandler","event","random","Math","floor","guruOption","concat","fetch","json","randomGif","optionToShow","images","original","url","id","onSubmit","width","decideQuestion","decideAnswer","loadTrailerorNot","randomMovie","replace","height","allowFullScreen","synopsis","randomDrink","cache","err","title","drinks","strDrink","strDrinkThumb","EatAnswer","randomMeal","meals","strMeal","strSource","strMealThumb","href","App","exact","path","component","render","YesNoAnswer","ThisThatQuestion","ThisThatAnswer","DecideQuestion","OutTonight","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4c9f0d0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign.js'\n\n\nlet advice;\n\nexport class Advice extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAdvice:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://api.adviceslip.com/advice`)\n        .then(response => {\n          this.setState({ randomAdvice:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }    \n      \n \n    \n    \n    render() {\n\n   if(this.state.randomAdvice.slip){\n    advice = this.state.randomAdvice.slip.advice;\n   }\n    \n    \n   \n        return (\n            <>\n                <GuruAnswerDesign/>\n                <div className=\"response-container\">\n                <p style={{marginTop:\"100px\", marginLeft:\"0\"}}>{advice}</p>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Advice\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\n\n\nlet options;\nlet urlPart1 = \"https://api.giphy.com/v1/gifs/search?api_key=sa9xw4Yo24USK2G5qleY0Y4HdBWjcDf2&q=\"\nlet urlPart2= \"&limit=1&offset=0&rating=G&lang=en\"\nlet finalUrl\nlet gifToShow\n\nexport class thisThatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        option1:'',\n        option2:'',\n        guruOption:'',\n        randomGif:{},\n            }  \n        }\n\n        setOptions = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n                }, ()=>{\n                })\n        }\n\n        mySubmitHandler = (event) => {\n            event.preventDefault();\n            options = [this.state.option1, this.state.option2];\n            let random = Math.floor(Math.random() * 2);\n            this.setState({guruOption:options[random]})\n            finalUrl = urlPart1.concat(options[random],urlPart2)\n            console.log(finalUrl)\n            \n            fetch(finalUrl)\n            .then(response=>response.json())\n            .then(data=> {\n                console.log(data.data)\n                this.setState({\n                    randomGif: data\n                },\n                console.log(this.state.randomGif)\n                )})    \n          }\n\n          \n\n    render() {\n        let optionToShow = '';\n        if (this.state.guruOption) {\n          optionToShow = <p style={{textTransform: 'capitalize'}}> {this.state.guruOption} is the best option </p>;\n        } else {\n          optionToShow = '';\n        }\n        \n        if (this.state.randomGif.data){\n           \n            gifToShow = this.state.randomGif.data[0].images.original.url;\n            }\n\n        return (\n            <div className=\"thisthat-answer\">\n            <img id=\"answer-image\" src=\"./images/guru2.png\"/>\n            \n            <h4 className=\"answer-input-container\">Guru, pick one for me:</h4>\n            <p><i>Enter below two options, and the Guru will pick one for you:</i></p>\n            <form onSubmit={this.mySubmitHandler}>\n            <div className=\"thisthat-input-container\">\n            <input type=\"text\" name=\"option1\" placeholder=\"Option 1\" value={this.state.option1} onChange={this.setOptions}/>\n            <span>OR</span>\n            <input type=\"text\" name=\"option2\" placeholder=\"Option 2\" value={this.state.option2} onChange={this.setOptions}/>\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\"> Pick Now </button>\n            </form>\n            {optionToShow}\n            <img style={{width:\"200px\"}} src={gifToShow}/>\n             <img id=\"bubble-answer\" src=\"./images/baloon.png\"/>\n            </div>\n        )\n    }\n}\n\nexport default thisThatAnswer\n","import React, { Component } from 'react'\nimport GuruAnswerDesign from './GuruAnswerDesign'\nimport axios from 'axios';\n\n\nlet movieTitle;\nlet trailer;\nlet embededTrailer;\nlet drink;\nlet drinkImage;\nlet random = Math.floor(Math.random() * 2);\n\nexport class decideAnswer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMovie:{},\n        randomDrink:{}\n            }  \n        }\n\n\n  componentDidMount() {\n          fetch('https://tv-v2.api-fetch.website/random/movie', {cache: \"no-store\"})\n          .then(response=>response.json())\n          .then(data=> this.setState({randomMovie:data})\n\n          )\n          .catch(err =>{\n            console.log(err)\n          })\n          axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n          .then(response => {\n            this.setState({ randomDrink:response.data });\n\n          })\n          .catch(err =>{\n            console.log(err)\n          })\n            \n      }     \n     \n \n\n\n    loadTrailerorNot = () =>{\n      if(this.state.randomMovie.trailer!=null){\n       trailer = this.state.randomMovie.trailer;          \n       embededTrailer = trailer.replace(\"watch?v=\", \"embed/\");\n        return <iframe src={embededTrailer} style={{width:\"420\", height:\"315\", borderRadius: \"30%\"}}  \n        allowFullScreen> </iframe> \n                }\n        return <h3>Synopsis: {this.state.randomMovie.synopsis}</h3>\n           }\n\n    \n    render() {\n      console.log(random)\n      if(random==0){\n      if (this.state.randomMovie){\n           movieTitle = this.state.randomMovie.title;\n        return (\n            <>\n            <GuruAnswerDesign/>\n            <div className=\"response-container\">\n            <p>Nope, not a good idea...</p>\n            <p>you should stay home and watch:</p>\n            <h3>{movieTitle}</h3>      \n            {this.loadTrailerorNot()}         \n            </div> \n            </>\n        )}\n        else return(<div>Loading...</div>)\n    }\n  else{\n    if(this.state.randomDrink.drinks){\n      drink = this.state.randomDrink.drinks[0].strDrink\n      drinkImage = this.state.randomDrink.drinks[0].strDrinkThumb\n      return (\n        <>\n        <GuruAnswerDesign/>\n        <div className=\"response-container\">\n        <p>Yes, go out and have some fun</p>\n        <p>buy yourself a drink, I feel like you need a</p>\n        <h3>{drink}</h3> \n        <p> is a good option</p>     \n        <img src={drinkImage} style={{width:\"200px\"}}/>         \n        </div> \n        </>\n    )}\n    else return(<div>Loading...</div>)\n    }\n\n  }\n}\n\nexport default decideAnswer\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign'\n\nlet mealToEat;\nlet recipe;\nlet mealPhoto;\n\nexport class EatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMeal:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/random.php`)\n        .then(response => {\n          this.setState({ randomMeal:response.data });\n          console.log(this.state.randomMeal)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        if (this.state.randomMeal.meals){\n        mealToEat = this.state.randomMeal.meals[0].strMeal;\n        recipe = this.state.randomMeal.meals[0].strSource;\n        mealPhoto = this.state.randomMeal.meals[0].strMealThumb;\n        }\n        return (\n            <>\n             <GuruAnswerDesign/>\n            <div className=\"response-container\">\n            <h4>Have some {mealToEat}</h4>\n            <img style={{width:\"100px\", borderRadius: \"50%\"}} src={mealPhoto}/>\n            <p>I even found the recipe for you <a href={recipe} target=\"_blank\"> here.</a> </p>\n            <p>Now, don't be lazy and go cook.</p>\n            \n            </div>\n               \n            </>\n        )}\n\n    \n}\n\nexport default EatAnswer\n","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\nexport class HomePage extends Component {\n\n\n    render() {\n        return (\n            <>\n            <section className=\"title\">\n            <h1>Are you tired of making decisions on your own? Ask the Guru!</h1>\n            </section>\n            \n\n            <div className=\"home\">\n            <section className=\"home-buttons\">\n            <button className=\"btn btn-primary\"><Link to=\"/yes-no\" style={{textDecoration:\"none\", color:\"white\"}}>Yes / No Questions</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/this-that\" style={{textDecoration:\"none\", color:\"white\"}}>This or That Questions</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/decide\" style={{textDecoration:\"none\", color:\"white\"}}>Let the Guru decide things for you</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/advice\" style={{textDecoration:\"none\", color:\"white\"}}>Ask the Guru for an Advice</Link></button>\n            </section> \n                <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default HomePage\n\n\n ","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\n\n\n\n\n\nexport class Dropdown extends Component {\n    render() {\n        const {\n            show,\n            value,\n            handleToggle,\n            handleChange,\n          } = this.props;\n\nreturn (\n\n        <div className=\"dropdown-container\">\n        <label className=\"arrow\">\n        <input type=\"button\" value={value} className=\"dropdown-btn\" onClick={handleToggle}/></label>\n        <ul className=\"dropdown-list\" hidden={!show}>\n        {this.props.options.map((question) => (\n            <li className=\"option\" onClick={handleChange(question.question)}>\n            <Link to={question.link} style={{textDecoration:\"none\"}}>\n              {question.question}\n              </Link></li>\n        ))}\n        </ul>\n            </div>\n             )\n              }\n                }\n \n\nexport default Dropdown\n\n\n\n","import React, { Component } from 'react'\nimport Dropdown from \"./Dropdown\"\n\n\nconst questions =[\n  {question:\"Will I ever find true love?\", link:\"/answer1\"},\n  {question:\"Second question?\", link:\"/answer1\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"}]\n\nexport class YesNoQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }\n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span>Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default YesNoQuestion","import React, { Component } from 'react'\nimport '../App.css';\n\n\nexport class GuruAnswerDesign extends Component {\n    render() {\n        return (\n            <>\n               <section className=\"answer-section\">\n                <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n                <img className=\"speech-image\" src=\"./images/speech-bubble.png\"/>\n              </section>\n            </>\n        )\n    }\n}\n\nexport default GuruAnswerDesign\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign';\n\nexport class YesorNo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAnswer:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://yesno.wtf/api/`)\n        .then(response => {\n          this.setState({ randomAnswer:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        return (\n            <>\n            <GuruAnswerDesign/>\n            <div className=\"response-container\">\n            <h1 style={{ textTransform: 'capitalize'}}>{this.state.randomAnswer.answer}...</h1>\n            <img src={this.state.randomAnswer.image} style={{maxWidth:\"250px\", borderRadius: \"50%\"}}/>\n            \n            </div> \n            </>\n        )\n    }\n}\n\nexport default YesorNo\n","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\n\nexport class thisThatQuestion extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        option1:'',\n        option2:'',\n        show:false\n            }  \n        }\n\n        setOptions = (e) => {\n            this.setState({\n                [e.target.option1]:e.target.value,\n                [e.target.option2]:e.target.value,       \n            })\n        }\n\n        submitOptions = (e) => {\n            e.preventDefault()\n            let options = {\n            option1: this.state.option1,\n            option2: this.state.option2,\n            } \n           console.log(this.option1)\n           console.log(this.option2)\n            } ;\n   \n\n    render() {\n        return (\n            <>\n        {/* onSubmit = {this.submitOptions} */}\n            <div className=\"thisthat-container\">\n            <img className=\"guru-img1\"  src=\"./images/guru1.png\"/>          \n            <h4>Guru, pick one for me:</h4>\n            <p><i>Enter below the two options you are in between:</i></p>\n            <form >\n            <div className=\"thisthat-input-container\">\n            <input type=\"text\" name=\"option1\" placeholder=\"Option 1\" onChange={this.setOptions}/>\n            <span>OR</span>\n            <input type=\"text\" name=\"option2\" placeholder=\"Option 2\" onChange={this.setOptions}/>\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\"><Link to= \"/answer2\" style={{textDecoration:\"none\", color:\"white\"}}>\n            Pick Now </Link></button>\n            </form>\n            </div>\n            </>\n              \n         \n        )\n    }\n}\n\nexport default thisThatQuestion\n\n\n","import React, { Component } from 'react'\nimport Dropdown from './Dropdown'\n\n\nconst questions =[\n  {question:\"Should I go out tonight?\", link:\"/answer3\"},\n  {question:\"I'm hungry, what should I eat?\", link:\"/eat\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer3\"}]\n\nexport class decideQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }    \n    \n    \n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span>Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default decideQuestion\n","import React, { Component } from 'react'\nimport './App.css';\nimport {Switch, Link, Route} from 'react-router-dom';\nimport HomePage from './components/HomePage.js'\nimport YesNoQuestion from './components/YesNoQuestion';\nimport YesNoAnswer from './components/YesNoAnswer';\nimport Advice from './components/Advice';\nimport ThisThatQuestion from './components/ThisThatQuestion';\nimport ThisThatAnswer from './components/ThisThatAnswer';\nimport DecideQuestion from './components/DecideQuestion';\nimport OutTonight from './components/OutTonight';\nimport EatAnswer from './components/EatAnswer';\n\n\nexport class App extends Component {\n\n  render() {\n   \n    return (\n     <>\n     \n<Switch>\n<Route exact path=\"/\" component={HomePage} />\n<Route exact path=\"/yes-no\" render={() => <YesNoQuestion/>} />\n<Route exact path=\"/answer1\" render={() => <YesNoAnswer/>} />\n<Route exact path=\"/this-that\" render={() => <ThisThatQuestion/>} />\n<Route exact path=\"/answer2\" render={() => <ThisThatAnswer/>} />\n<Route exact path=\"/decide\" render={() => <DecideQuestion/>} />\n<Route exact path=\"/answer3\" render={() => <OutTonight/>} />\n<Route exact path=\"/eat\" render={() => <EatAnswer/>} />\n<Route exact path=\"/advice\" render={() => <Advice/>} />\n\n\n</Switch>\n\n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('hi')\nReactDOM.render(\n<HashRouter>\n    <App /> \n</HashRouter>,\n\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}