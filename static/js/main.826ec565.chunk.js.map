{"version":3,"sources":["components/Advice.js","components/DecideAnswer.js","components/HomePage.js","components/Dropdown.js","components/YesNoQuestion.js","components/GuruAnswerDesign.js","components/YesNoAnswer.js","components/ThisThatQuestion.js","components/ThisThatAnswer.js","components/DecideQuestion.js","App.js","serviceWorker.js","index.js"],"names":["advice","movieTitle","trailer","embededTrailer","HomePage","className","to","style","textDecoration","color","src","Component","Dropdown","this","props","show","value","handleToggle","handleChange","type","onClick","hidden","options","map","question","link","questions","YesNoQuestion","e","target","focus","setState","state","GuruAnswerDesign","YesorNo","randomAnswer","axios","get","then","response","data","catch","error","console","log","textTransform","answer","image","maxWidth","borderRadius","Advice","randomAdvice","slip","marginTop","marginLeft","thisThatQuestion","thisThatAnswer","decideQuestion","decideAnswer","loadTrailerorNot","randomMovie","replace","width","height","allowFullScreen","synopsis","title","App","exact","path","component","render","YesNoAnswer","ThisThatQuestion","ThisThatAnswer","DecideQuestion","DecideAnswer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.826ec565.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign.js'\n\n\nlet advice;\n\nexport class Advice extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAdvice:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://api.adviceslip.com/advice`)\n        .then(response => {\n          this.setState({ randomAdvice:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }    \n      \n \n    \n    \n    render() {\n\n   if(this.state.randomAdvice.slip){\n    advice = this.state.randomAdvice.slip.advice;\n   }\n    \n    \n   \n        return (\n            <>\n                <GuruAnswerDesign/>\n                <div className=\"response-container\">\n                <p style={{marginTop:\"100px\", marginLeft:\"0\"}}>{advice}</p>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Advice\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign'\n\n\nlet movieTitle;\nlet trailer;\nlet embededTrailer;\n\nexport class decideAnswer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAnswer:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get('https://tv-v2.api-fetch.website/random/movie')\n        .then(response => {\n          this.setState({ randomMovie:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n\n    loadTrailerorNot = () =>{\n      if(this.state.randomMovie.trailer!=null){\n       trailer = this.state.randomMovie.trailer;          \n       embededTrailer = trailer.replace(\"watch?v=\", \"embed/\");\n        return <iframe src={embededTrailer} style={{width:\"420\", height:\"315\", borderRadius: \"30%\"}}  allowFullScreen> </iframe> \n                }\n        return <h3>Synopsis: {this.state.randomMovie.synopsis}</h3>\n           }\n    \n    \n    \n    \n    render() {\n\n      if (this.state.randomMovie){\n           movieTitle = this.state.randomMovie.title;\n        return (\n            <>\n            <GuruAnswerDesign/>\n            <div className=\"response-container\">\n            <p>Nope, not a good idea...</p>\n            <p>you should stay home and watch:</p>\n            <h3>{movieTitle}</h3>      \n            {this.loadTrailerorNot()}         \n            </div> \n            </>\n        )}\n        else return(<div>loading...</div>)\n    }\n}\n\n\n\nexport default decideAnswer\n","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\nexport class HomePage extends Component {\n\n\n    render() {\n        return (\n            <>\n            <section className=\"title\">\n            <h1>Are you tired of making decisions on your own? Ask the Guru!</h1>\n            </section>\n            \n\n            <div className=\"home\">\n            <section className=\"home-buttons\">\n            <button className=\"btn btn-primary\"><Link to=\"/yes-no\" style={{textDecoration:\"none\", color:\"white\"}}>Yes / No Questions</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/this-that\" style={{textDecoration:\"none\", color:\"white\"}}>This or That Questions</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/decide\" style={{textDecoration:\"none\", color:\"white\"}}>Let the Guru decide things for you</Link></button>\n            <button className=\"btn btn-primary\"><Link to=\"/advice\" style={{textDecoration:\"none\", color:\"white\"}}>Ask the Guru for an Advice</Link></button>\n            </section> \n                <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default HomePage\n\n\n ","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\n\n\n\n\n\nexport class Dropdown extends Component {\n    render() {\n        const {\n            show,\n            value,\n            handleToggle,\n            handleChange,\n          } = this.props;\n\nreturn (\n\n        <div className=\"dropdown-container\">\n        <label className=\"arrow\">\n        <input type=\"button\" value={value} className=\"dropdown-btn\" onClick={handleToggle}/></label>\n        <ul className=\"dropdown-list\" hidden={!show}>\n        {this.props.options.map((question) => (\n            <li className=\"option\" onClick={handleChange(question.question)}>\n            <Link to={question.link} style={{textDecoration:\"none\"}}>\n              {question.question}\n              </Link></li>\n        ))}\n        </ul>\n            </div>\n             )\n              }\n                }\n \n\nexport default Dropdown\n\n\n\n","import React, { Component } from 'react'\nimport Dropdown from \"./Dropdown\"\n\n\nconst questions =[\n  {question:\"Will I ever find true love?\", link:\"/answer1\"},\n  {question:\"Second question?\", link:\"/answer1\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"}]\n\nexport class YesNoQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }\n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span>Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default YesNoQuestion","import React, { Component } from 'react'\nimport '../App.css';\n\n\nexport class GuruAnswerDesign extends Component {\n    render() {\n        return (\n            <>\n               <section className=\"answer-section\">\n                <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n               <img className=\"speech-image\" src=\"./images/speech-bubble.png\"/>\n              </section>\n            </>\n        )\n    }\n}\n\nexport default GuruAnswerDesign\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport GuruAnswerDesign from './GuruAnswerDesign';\n\nexport class YesorNo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAnswer:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://yesno.wtf/api/`)\n        .then(response => {\n          this.setState({ randomAnswer:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        return (\n            <>\n            <GuruAnswerDesign/>\n            <div className=\"response-container\">\n            <h1 style={{ textTransform: 'capitalize'}}>{this.state.randomAnswer.answer}...</h1>\n            <img src={this.state.randomAnswer.image} style={{maxWidth:\"250px\", borderRadius: \"50%\"}}/>\n            \n            </div> \n            </>\n        )\n    }\n}\n\nexport default YesorNo\n","import React, { Component } from 'react'\n\nexport class thisThatQuestion extends Component {\n    render() {\n        return (\n            <div>\n                <h1>This or that?</h1>\n            </div>\n        )\n    }\n}\n\nexport default thisThatQuestion\n","import React, { Component } from 'react'\n\nexport class thisThatAnswer extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default thisThatAnswer\n","import React, { Component } from 'react'\nimport Dropdown from './Dropdown'\n\n\nconst questions =[\n  {question:\"Should I go out tonight?\", link:\"/answer3\"},\n  {question:\"Second question?\", link:\"/answer2\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer3\"}]\n\nexport class decideQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }    \n    \n    \n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span>Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default decideQuestion\n","import React, { Component } from 'react'\nimport './App.css';\nimport {Switch, Link, Route} from 'react-router-dom';\nimport HomePage from './components/HomePage.js'\nimport YesNoQuestion from './components/YesNoQuestion';\nimport YesNoAnswer from './components/YesNoAnswer';\nimport Advice from './components/Advice';\nimport ThisThatQuestion from './components/ThisThatQuestion';\nimport ThisThatAnswer from './components/ThisThatAnswer';\nimport DecideQuestion from './components/DecideQuestion';\nimport DecideAnswer from './components/DecideAnswer';\n\n\nexport class App extends Component {\n\n  render() {\n   \n    return (\n     <>\n     \n<Switch>\n<Route exact path=\"/\" component={HomePage} />\n<Route exact path=\"/yes-no\" render={() => <YesNoQuestion/>} />\n<Route exact path=\"/answer1\" render={() => <YesNoAnswer/>} />\n<Route exact path=\"/this-that\" render={() => <ThisThatQuestion/>} />\n<Route exact path=\"/answer2\" render={() => <ThisThatAnswer/>} />\n<Route exact path=\"/decide\" render={() => <DecideQuestion/>} />\n<Route exact path=\"/answer3\" render={() => <DecideAnswer/>} />\n<Route exact path=\"/advice\" render={() => <Advice/>} />\n\n\n</Switch>\n\n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n<BrowserRouter>\n<App />, \n</BrowserRouter>,\n\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}