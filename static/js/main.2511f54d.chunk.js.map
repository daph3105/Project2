{"version":3,"sources":["components/HomePage.js","components/Advice.js","components/ThisThatAnswer.js","components/OutTonight.js","components/EatAnswer.js","components/Dropdown.js","components/YesNoQuestion.js","components/YesNoAnswer.js","components/DecideQuestion.js","App.js","serviceWorker.js","index.js"],"names":["advice","options","finalUrl","gifToShow","movieTitle","trailer","embededTrailer","finalTrailerLink","drink","drinkImage","mealToEat","recipe","mealPhoto","HomePage","state","collapse1","collapseID","toggleCollapse","setState","prevState","toggleSingleCollapse","collapseId","className","style","backgroundColor","padding","color","marginTop","light","id","onClick","isOpen","this","navbar","left","active","to","height","textDecoration","src","Component","Dropdown","props","show","value","handleToggle","handleChange","type","hidden","map","question","link","questions","YesNoQuestion","e","target","focus","YesorNo","randomAnswer","axios","get","then","response","data","catch","error","console","log","textTransform","answer","image","Advice","randomAdvice","slip","marginLeft","urlPart1","urlPart2","thisThatAnswer","setOptions","name","mySubmitHandler","event","preventDefault","option1","option2","random","Math","floor","guruOption","concat","fetch","cache","json","randomGif","bubble","optionToShow","images","original","url","onSubmit","placeholder","onChange","decideQuestion","randomNumber","decideAnswer","loadTrailerorNot","randomMovie","replace","allowFullScreen","synopsis","randomDrink","err","title","drinks","strDrink","strDrinkThumb","EatAnswer","randomMeal","meals","strMeal","strSource","strMealThumb","width","borderRadius","href","App","exact","path","component","render","YesNoAnswer","ThisThatAnswer","DecideQuestion","OutTonight","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2511f54d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBCollapse, MDBContainer,\n    MDBHamburgerToggler } from 'mdbreact';\n\nexport class HomePage extends Component {\n    state = {\n        collapse1: false,\n        collapseID: ''\n      }\n      \n      toggleCollapse = collapseID => () => {\n        this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\n      }\n      \n      toggleSingleCollapse = collapseId => {\n        this.setState({\n          ...this.state,\n          [collapseId]: !this.state[collapseId]\n        });\n      }\n\n    render() {\n        return (\n            <>\n    \n      <MDBContainer className=\"hamburger-menu\" style={{backgroundColor:\"#D43A39\", padding:\"10px\"}}>\n        <MDBNavbar color=\"amber lighten-4\" style={{ marginTop: '0px' }} light>\n          <MDBContainer>      \n            <MDBHamburgerToggler color=\"white\" id=\"hamburger1\" onClick={()=> this.toggleSingleCollapse('collapse1')} />\n              <MDBCollapse isOpen={this.state.collapse1} navbar>\n                <MDBNavbarNav left>\n                  <MDBNavItem active>\n                    <MDBNavLink to=\"/yes-no\" style={{color:\"white\"}}>Yes / No Questions</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/this-that\" style={{color:\"white\"}}>This or That Questions</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/decide\" style={{color:\"white\"}}>Let the Guru decide things for you</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/advice\" style={{color:\"white\"}}>Ask the Guru for an Advice</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n          </MDBContainer>\n        </MDBNavbar>\n      </MDBContainer>\n   \n           \n            <h1 className=\"home-h1\">Are you tired of making decisions on your own?</h1>\n            <h2 className=\"home-h2\">Ask the Guru!</h2>\n         \n            \n\n            <div className=\"home\">\n            <section className=\"home-buttons\">\n            <button className=\"btn btn-danger\" style={{height:\"70px\"}}><Link to=\"/yes-no\" style={{textDecoration:\"none\", color:\"white\"}}>Yes / No Questions</Link></button>\n            <button className=\"btn btn-danger\" style={{height:\"70px\"}}><Link to=\"/this-that\" style={{textDecoration:\"none\", color:\"white\"}}>This or That Questions</Link></button>\n            <button className=\"btn btn-danger\" style={{height:\"70px\"}}><Link to=\"/decide\" style={{textDecoration:\"none\", color:\"white\"}}>Let the Guru decide things for you</Link></button>\n            <button className=\"btn btn-danger\" style={{height:\"70px\"}}><Link to=\"/advice\" style={{textDecoration:\"none\", color:\"white\"}}>Ask the Guru for an Advice</Link></button>\n            </section> \n                <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default HomePage\n\n\n ","import React, { Component } from 'react'\nimport axios from 'axios';\n\n\n\nlet advice;\n\nexport class Advice extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAdvice:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://api.adviceslip.com/advice`)\n        .then(response => {\n          this.setState({ randomAdvice:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }    \n      \n \n    \n    \n    render() {\n\n   if(this.state.randomAdvice.slip){\n    advice = this.state.randomAdvice.slip.advice;\n   }\n    \n    \n   \n        return (\n            <>\n               \n                <div className=\"response-container\">\n                <p style={{marginTop:\"100px\", marginLeft:\"0\"}}>{advice}</p>\n                <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Advice\n","import React, { Component } from 'react'\n\n\n\n\nlet options;\nlet urlPart1 = \"https://api.giphy.com/v1/gifs/search?api_key=sa9xw4Yo24USK2G5qleY0Y4HdBWjcDf2&q=\"\nlet urlPart2= \"&limit=1&offset=0&rating=G&lang=en\"\nlet finalUrl\nlet gifToShow\n\nexport class thisThatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        option1:'',\n        option2:'',\n        guruOption:'',\n        randomGif:{},\n        bubble:false\n            }  \n        }\n\n        setOptions = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n                }, ()=>{\n                })\n        }\n\n        mySubmitHandler = (event) => {\n            event.preventDefault();\n            options = [this.state.option1, this.state.option2];\n            let random = Math.floor(Math.random() * 2);\n            this.setState({guruOption:options[random]})\n            finalUrl = urlPart1.concat(options[random],urlPart2)\n            console.log(finalUrl)\n            \n            fetch(finalUrl, {cache: \"no-store\"})\n            .then(response=>response.json())\n            .then(data=> {\n                console.log(data.data)\n                this.setState({\n                    randomGif: data\n                },\n                console.log(this.state.randomGif)\n                )})    \n          }\n\n          \n\n    render() {\n        let optionToShow = '';\n        if (this.state.guruOption) {\n          optionToShow = <p id=\"gif-text\" style={{textTransform: 'capitalize'}}> {this.state.guruOption} is the best option! </p>;\n        } else {\n          optionToShow = '';\n        }\n        \n        if (this.state.randomGif.data){\n           \n            gifToShow = <img id=\"gif\" src={this.state.randomGif.data[0].images.original.url}/> ;\n            }\n            else{\n                gifToShow='';\n            }\n\n        return (\n            <div className=\"thisthat-answer\">\n            <img id=\"answer-image\" src=\"./images/guru2.png\"/>\n            \n            <h4 className=\"guru-pick-text\">Guru, pick one for me:</h4>\n            <p><i>Enter below two options, and the Guru will pick one for you:</i></p>\n            <form onSubmit={this.mySubmitHandler}>\n            <div className=\"thisthat-input-container\">\n            <input type=\"text\" name=\"option1\" placeholder=\"Option 1\" value={this.state.option1} onChange={this.setOptions}/>\n            <span>OR</span>\n            <input type=\"text\" name=\"option2\" placeholder=\"Option 2\" value={this.state.option2} onChange={this.setOptions}/>\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={()=>{this.setState({bubble:true})}} > Pick Now </button>\n            </form>\n            <div className=\"gif-container\">    \n            {optionToShow}\n            {gifToShow}\n            {this.state.bubble ? <img className=\"speech\" src=\"./images/speech1.png\"/>: null}\n            \n            </div>\n\n          \n            </div>\n        )\n    }\n}\n\nexport default thisThatAnswer\n\n\n\n  \n \n  \n","import React, { Component } from 'react'\n\nimport axios from 'axios';\n\n\nlet movieTitle;\nlet trailer;\nlet embededTrailer;\nlet finalTrailerLink;\nlet drink;\nlet drinkImage;\nlet randomNumber = Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n\nexport class decideAnswer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMovie:{},\n        randomDrink:{}\n            }  \n        }\n\n\n  componentDidMount() {\n          fetch('https://tv-v2.api-fetch.website/random/movie', {cache: \"no-store\"})\n          .then(response=>response.json())\n          .then(data=> this.setState({randomMovie:data})\n\n          )\n          .catch(err =>{\n            console.log(err)\n          })\n          axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n          .then(response => {\n            this.setState({ randomDrink:response.data });\n\n          })\n          .catch(err =>{\n            console.log(err)\n          })\n            \n      }     \n     \n\n\n    loadTrailerorNot = () =>{\n      if(this.state.randomMovie.trailer!=null){\n       trailer = this.state.randomMovie.trailer;          \n       embededTrailer = trailer.replace(\"watch?v=\", \"embed/\");\n       finalTrailerLink = embededTrailer.replace(\"http:\", \"https:\")\n        return <iframe src={finalTrailerLink} allowFullScreen> </iframe> \n                }\n        return <h3 id=\"synopsis\" >Synopsis: {this.state.randomMovie.synopsis}</h3>\n           }\n\n    \n    render() {\n      console.log(randomNumber)\n      if(randomNumber==1){\n      if (this.state.randomMovie){\n           movieTitle = this.state.randomMovie.title;\n        return (\n            <>\n           \n            <div className=\"response-container\">\n            <p id=\"stay-home-text\" >Nope, not a good idea...<br/>\n              stay home and watch:</p>\n            <h3 id=\"movie-title\">{movieTitle}</h3>      \n            {this.loadTrailerorNot()}\n            <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n            </div> \n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            </>\n        )}\n        else return(<div>Loading...</div>)\n    }\n  else{\n    if(this.state.randomDrink.drinks){\n      drink = this.state.randomDrink.drinks[0].strDrink\n      drinkImage = this.state.randomDrink.drinks[0].strDrinkThumb\n      return (\n        <>\n      \n        <div className=\"response-container\">\n        <p id=\"go-out-text\" >Yes, go out and have some fun!<br/>\n        buy yourself a drink, I feel like you need a...</p>\n        <h3 id=\"drink-text\">{drink}</h3>    \n        <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n        <img id=\"drink-image\" src={drinkImage}/>         \n        </div> \n        <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n        </>\n    )}\n    else return(<div>Loading...</div>)\n    }\n\n  }\n}\n\nexport default decideAnswer\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\n\nlet mealToEat;\nlet recipe;\nlet mealPhoto;\n\nexport class EatAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        randomMeal:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/random.php`)\n        .then(response => {\n          this.setState({ randomMeal:response.data });\n          console.log(this.state.randomMeal)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        if (this.state.randomMeal.meals){\n        mealToEat = this.state.randomMeal.meals[0].strMeal;\n        recipe = this.state.randomMeal.meals[0].strSource;\n        mealPhoto = this.state.randomMeal.meals[0].strMealThumb;\n        }\n        return (\n            <>\n          \n            <div className=\"response-container\">\n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            <h4>Have some {mealToEat}</h4>\n            <img style={{width:\"100px\", borderRadius: \"50%\"}} src={mealPhoto}/>\n            <p>I even found the recipe for you <a href={recipe} target=\"_blank\"> here.</a> </p>\n            <p>Now, don't be lazy and go cook.</p>\n            \n            </div>\n               \n            </>\n        )}\n\n    \n}\n\nexport default EatAnswer\n","import React, { Component } from 'react'\nimport {Switch, Link, Route} from 'react-router-dom';\n\n\n\n\n\n\nexport class Dropdown extends Component {\n    render() {\n        const {\n            show,\n            value,\n            handleToggle,\n            handleChange,\n          } = this.props;\n\nreturn (\n\n        <div className=\"dropdown-container\">\n        <label className=\"arrow\">\n        <input type=\"button\" value={value} className=\"dropdown-btn\" onClick={handleToggle}/></label>\n        <ul className=\"dropdown-list\" hidden={!show}>\n        {this.props.options.map((question) => (\n            <li className=\"option\" onClick={handleChange(question.question)}>\n            <Link to={question.link} style={{textDecoration:\"none\"}}>\n              {question.question}\n              </Link></li>\n        ))}\n        </ul>\n            </div>\n             )\n              }\n                }\n \n\nexport default Dropdown\n\n\n\n","import React, { Component } from 'react'\nimport Dropdown from \"./Dropdown\"\n\n\nconst questions =[\n  {question:\"Will I ever find true love?\", link:\"/answer1\"},\n  {question:\"Second question?\", link:\"/answer1\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer1\"}]\n\nexport class YesNoQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }\n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span id=\"guru-word\">Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/>\n            </section>   \n            </>\n        )\n    }\n}\n\nexport default YesNoQuestion","import React, { Component } from 'react'\nimport axios from 'axios';\n\n\nexport class YesorNo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        randomAnswer:{}\n            }  \n        }\n\n    componentDidMount() {\n        axios.get(`https://yesno.wtf/api/`)\n        .then(response => {\n          this.setState({ randomAnswer:response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    render() {\n        return (\n            <>\n       \n            <div className=\"response-container\">    \n            <h1 id=\"yes-no-text\" style={{ textTransform: 'capitalize'}}>{this.state.randomAnswer.answer}...</h1>\n            <img id=\"yes-no-image\" src={this.state.randomAnswer.image} />\n            <img className=\"speech-image\" src=\"./images/speech1.png\"/>\n            \n            </div> \n            <img className=\"guru-img2\" src=\"./images/guru2.png\"/> \n            </>\n        )\n    }\n}\n\nexport default YesorNo\n","import React, { Component } from 'react'\nimport Dropdown from './Dropdown'\n\n\nconst questions =[\n  {question:\"Should I go out tonight?\", link:\"/answer3\"},\n  {question:\"I'm hungry, what should I eat?\", link:\"/eat\" },\n  {question:\"Third question?\", link:\"/answer1\"},\n  {question: \"Fourth question?\", link:\"/answer3\"}]\n\nexport class decideQuestion extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          show: false,\n        };\n      }\n    \n      handleToggle = (e) => {\n        e.target.focus();\n        this.setState({ show: !this.state.show });\n      }\n    \n    handleChange = (question) => () => {\n        this.setState({ value: question, show: false });\n      }    \n    \n    \n    render() {\n        return (\n            <>\n            <section className=\"question-section\">\n            <img className=\"guru-img1\" src=\"./images/guru1.png\"/>\n            <span>Guru,</span>\n            <Dropdown show={this.state.show} value={this.state.value} handleToggle={this.handleToggle} \n            handleChange={this.handleChange} options={questions}/></section>   \n            </>\n        )\n    }\n}\n\nexport default decideQuestion\n","import React, { Component } from 'react'\nimport './App.css';\nimport {Switch, Link, Route} from 'react-router-dom';\nimport HomePage from './components/HomePage.js'\nimport YesNoQuestion from './components/YesNoQuestion';\nimport YesNoAnswer from './components/YesNoAnswer';\nimport Advice from './components/Advice';\nimport ThisThatAnswer from './components/ThisThatAnswer';\nimport DecideQuestion from './components/DecideQuestion';\nimport OutTonight from './components/OutTonight';\nimport EatAnswer from './components/EatAnswer';\n\n\nexport class App extends Component {\n\n  render() {\n   \n    return (\n     <>\n     \n<Switch>\n\n<Route exact path=\"/\" component={HomePage} />\n<Route exact path=\"/yes-no\" render={() => <YesNoQuestion/>} />\n<Route exact path=\"/answer1\" render={() => <YesNoAnswer/>} />\n<Route exact path=\"/this-that\" render={() => <ThisThatAnswer/>} />\n<Route exact path=\"/decide\" render={() => <DecideQuestion/>} />\n<Route exact path=\"/answer3\" render={() => <OutTonight/>} />\n<Route exact path=\"/eat\" render={() => <EatAnswer/>} />\n<Route exact path=\"/advice\" render={() => <Advice/>} />\n\n</Switch>\n\n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('hi')\nReactDOM.render(\n<HashRouter>\n    <App /> \n</HashRouter>,\n\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}